"""All github queries."""

FRAGMENTS =  """
fragment RepositoryFragment on Repository {
    id
	name
    description
    codeOfConduct {
      	id
    }
    createdAt
	diskUsage
  	forkCount
  	isArchived
  	isDisabled
    isFork
    isLocked
    isMirror
    isPrivate
    url
    licenseInfo{
        id
        body
        description
        featured
        nickname
        permissions{
            description
            label
        }
  }
}

fragment LanguageFragment on Language{
	id
	name
}

fragment UserFragment on User {
	id
	name
	login
	bio
	company
	createdAt
	isBountyHunter
    isCampusExpert
    isDeveloperProgramMember
    isEmployee
    isHireable
    isSiteAdmin
    isViewer
	location
	updatedAt
    url
    viewerCanCreateProjects
    viewerCanFollow
    viewerIsFollowing
}
fragment CommitCommentFragment on CommitComment {
    id  
  	authorAssociation
		bodyText
  	createdAt
  	url
}

fragment ReleaseFragment on Release {
	author{
    id
  }
  createdAt
  description
  id
  isDraft
  isPrerelease
  name
  publishedAt
  tag
  url
  updatedAt
}
"""
REPOSITORY_DESCRIPTION = """
query {
    resource(url: "https://github.com/mini-pw/WizualizacjaDanych2018") {
		... RepositoryFragment
	}
}	
"""

REPOSITORY_FORKS = """
query {
    resource(url: "https://github.com/mini-pw/WizualizacjaDanych2018") {
  		... on Repository {
			forks(first: 100, after: null) {
				nodes {
					... RepositoryFragment
				}
				pageInfo {
					endCursor
					hasNextPage
				}
			}
		}
	}
}		
"""

REPOSITORY_LANGUAGES = """
query {
    resource(url: "https://github.com/SaxMan96/VanillaDeepNet") {
  		... on Repository {
			languages(first:100, after: null) {
				totalSize
				totalCount
				edges {
					size
					node {
						... LanguageFragment
					}
				}
				pageInfo {
					endCursor
					hasNextPage
				}
			}
		}
	}
}
"""

REPOSITORY_ASIGNABLE_USERS = """
query {
    resource(url: "https://github.com/SaxMan96/VanillaDeepNet") {
  		... on Repository {
			assignableUsers(first: 100, after: null) {
				nodes {
					... UserFragment
				}
				 pageInfo {
					endCursor
					hasNextPage
				}
			}
		}
	}
}
"""
REPOSITORY_COLABORATORS = """
query {
    resource(url: "https://github.com/SaxMan96/VanillaDeepNet") {
  		... on Repository {
			collaborators(first: 100, after: null) {
				nodes {
					... UserFragment
				}
				 pageInfo {
					endCursor
					hasNextPage
				}
			}
		}
	}
}
"""

REPOSITORY_COMMIT_COMMENTS = """
query {
    resource(url: "https://github.com/tensorflow/tensorflow") {
   		... on Repository {
			commitComments(first: 100, after: null) {
				totalCount
				nodes {
					... CommitCommentFragment
				}
				 pageInfo {
					endCursor
					hasNextPage
				}
			}
		}
	}
}
"""

REPOSITORY_STARGAZERS = """
query {
    resource(url: "https://github.com/tensorflow/tensorflow") {
   		... on Repository {
			stargazers(first: 100, after: null) {
				totalCount
				nodes {
					... UserFragment
				}
				 pageInfo {
					endCursor
					hasNextPage
				}
			}
		}
	}
}
"""

REPOSITORY_RELEASES = """
query {
    resource(url: "https://github.com/tensorflow/tensorflow") {
   		... on Repository {
			releases(first: 100, after: null) {
				totalCount
				nodes {
					... ReleaseFragment
				}
				 pageInfo {
					endCursor
					hasNextPage
				}
			}
		}
	}
}
"""